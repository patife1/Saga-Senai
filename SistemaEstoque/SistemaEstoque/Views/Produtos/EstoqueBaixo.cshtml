@model IEnumerable<SistemaEstoque.Models.Produto>
@{
    ViewData["Title"] = "Produtos com Estoque Baixo";
}

<div class="row">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h2><i class="bi bi-exclamation-triangle text-warning"></i> Produtos com Estoque Baixo</h2>
            <div>
                <a asp-action="Index" class="btn btn-secondary me-2">
                    <i class="bi bi-list"></i> Todos os Produtos
                </a>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> Novo Produto
                </a>
            </div>
        </div>
    </div>
</div>

@if (Model.Any())
{
    <div class="alert alert-warning">
        <h5 class="alert-heading"><i class="bi bi-exclamation-triangle"></i> Atenção Necessária</h5>
        <p>Foram encontrados <strong>@Model.Count() produto(s)</strong> com estoque abaixo do mínimo recomendado.</p>
        <hr>
        <p class="mb-0">Considere fazer novos pedidos para repor o estoque destes produtos.</p>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-warning">
                                <tr>
                                    <th>Produto</th>
                                    <th>Categoria</th>
                                    <th>Estoque Atual</th>
                                    <th>Estoque Mínimo</th>
                                    <th>Diferença</th>
                                    <th>Valor Unitário</th>
                                    <th>Prioridade</th>
                                    <th>Ações</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var produto in Model.OrderBy(p => p.QuantidadeEstoque))
                                {
                                    var diferenca = produto.EstoqueMinimo - produto.QuantidadeEstoque;
                                    var prioridade = produto.QuantidadeEstoque == 0 ? "Crítica" : 
                                                   produto.QuantidadeEstoque <= (produto.EstoqueMinimo * 0.5) ? "Alta" : "Normal";
                                    var corPrioridade = prioridade == "Crítica" ? "danger" : 
                                                      prioridade == "Alta" ? "warning" : "info";
                                    
                                    <tr class="@(produto.QuantidadeEstoque == 0 ? "table-danger" : "")">
                                        <td>
                                            <strong>@produto.Nome</strong>
                                            @if (!string.IsNullOrEmpty(produto.CodigoBarras))
                                            {
                                                <br><small class="text-muted">@produto.CodigoBarras</small>
                                            }
                                        </td>
                                        <td>@produto.Categoria.Nome</td>
                                        <td>
                                            <span class="badge bg-@(produto.QuantidadeEstoque == 0 ? "danger" : "warning") fs-6">
                                                @produto.QuantidadeEstoque
                                            </span>
                                        </td>
                                        <td>@produto.EstoqueMinimo</td>
                                        <td>
                                            <span class="text-danger">
                                                <i class="bi bi-arrow-down"></i> @diferenca
                                            </span>
                                        </td>
                                        <td>@produto.PrecoCompra.ToString("C")</td>
                                        <td>
                                            <span class="badge bg-@corPrioridade">@prioridade</span>
                                        </td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <button type="button" class="btn btn-success btn-sm" 
                                                        onclick="atualizarEstoque(@produto.Id, '@produto.Nome')"
                                                        title="Atualizar Estoque">
                                                    <i class="bi bi-plus-circle"></i>
                                                </button>
                                                <a asp-action="Edit" asp-route-id="@produto.Id" 
                                                   class="btn btn-warning btn-sm" title="Editar">
                                                    <i class="bi bi-pencil"></i>
                                                </a>
                                                <a asp-action="Details" asp-route-id="@produto.Id" 
                                                   class="btn btn-info btn-sm" title="Detalhes">
                                                    <i class="bi bi-eye"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Resumo Financeiro -->
    <div class="row mt-4">
        <div class="col-md-3">
            <div class="card bg-danger text-white">
                <div class="card-body text-center">
                    <h5>@Model.Count(p => p.QuantidadeEstoque == 0)</h5>
                    <small>Produtos Zerados</small>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-dark">
                <div class="card-body text-center">
                    <h5>@Model.Count()</h5>
                    <small>Total Abaixo do Mínimo</small>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-info text-white">
                <div class="card-body text-center">
                    <h5>@Model.Sum(p => p.EstoqueMinimo - p.QuantidadeEstoque)</h5>
                    <small>Unidades Necessárias</small>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body text-center">
                    <h5>@Model.Sum(p => (p.EstoqueMinimo - p.QuantidadeEstoque) * p.PrecoCompra).ToString("C")</h5>
                    <small>Valor para Reposição</small>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="alert alert-success">
        <h5 class="alert-heading"><i class="bi bi-check-circle"></i> Parabéns!</h5>
        <p>Todos os produtos estão com estoque adequado.</p>
        <hr>
        <p class="mb-0">Nenhum produto está abaixo do estoque mínimo configurado.</p>
    </div>
    
    <div class="text-center py-5">
        <i class="bi bi-shield-check display-1 text-success"></i>
        <h4 class="text-success mt-3">Estoque Controlado</h4>
        <p class="text-muted">Continue monitorando regularmente para manter um bom controle de estoque.</p>
        <a asp-action="Index" class="btn btn-primary">
            <i class="bi bi-list"></i> Ver Todos os Produtos
        </a>
    </div>
}

<!-- Modal para Atualizar Estoque -->
<div class="modal fade" id="modalAtualizarEstoque" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Atualizar Estoque</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="formAtualizarEstoque" method="post" asp-action="AtualizarEstoque">
                    <input type="hidden" id="produtoId" name="id" />
                    <div class="mb-3">
                        <label class="form-label">Produto:</label>
                        <p id="nomeProduto" class="fw-bold"></p>
                    </div>
                    <div class="mb-3">
                        <label for="novaQuantidade" class="form-label">Nova Quantidade:</label>
                        <input type="number" class="form-control" id="novaQuantidade" name="novaQuantidade" min="0" required>
                        <div class="form-text">Digite a quantidade total atual em estoque.</div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="submit" form="formAtualizarEstoque" class="btn btn-success">
                    <i class="bi bi-check-circle"></i> Atualizar
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function atualizarEstoque(produtoId, nomeProduto) {
            document.getElementById('produtoId').value = produtoId;
            document.getElementById('nomeProduto').textContent = nomeProduto;
            document.getElementById('novaQuantidade').value = '';
            
            var modal = new bootstrap.Modal(document.getElementById('modalAtualizarEstoque'));
            modal.show();
        }
    </script>
}
